# app/handlers/settings_handler.py
import asyncio
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from app.utils.data_utils import get_user_data
from app.config.constants import CURRENCY
from app.config.messages import MESSAGES

async def settings(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Display settings menu with inline buttons."""
    user_id = str(update.effective_user.id)
    user_data = await asyncio.to_thread(get_user_data, user_id)
    language = user_data.get("language", "en")

    settings_summary = f"тЪЩя╕П *{'рд╕реЗрдЯрд┐рдВрдЧреНрд╕' if language == 'hi' else 'Settings'}*\n\n"
    settings_summary += f"ЁЯСд {'рдирд╛рдо' if language == 'hi' else 'Name'}: {user_data.get('name', 'Not set')}\n"
    settings_summary += f"ЁЯТ░ {'рдореБрджреНрд░рд╛' if language == 'hi' else 'Currency'}: {user_data.get('currency', CURRENCY)}\n"
    settings_summary += f"ЁЯУЙ {'рд╕реНрдЯреЙрдк-рд▓реЙрд╕' if language == 'hi' else 'Stop-Loss'}: {user_data.get('stoploss', 'Not set')}%\n"
    settings_summary += f"тП░ {'рд░рд┐рдорд╛рдЗрдВрдбрд░' if language == 'hi' else 'Reminders'}: {'рдЪрд╛рд▓реВ' if language == 'hi' else 'Enabled' if user_data.get('reminders', False) else 'рдмрдВрдж' if language == 'hi' else 'Disabled'}\n"

    keyboard = [
        [InlineKeyboardButton("ЁЯОп Edit Target" if language == "en" else "ЁЯОп рд▓рдХреНрд╖реНрдп рд╕рдВрдкрд╛рджрд┐рдд рдХрд░реЗрдВ", callback_data="edit_target_")],
        [InlineKeyboardButton("ЁЯУЙ Edit Stop-Loss" if language == "en" else "ЁЯУЙ рд╕реНрдЯреЙрдк-рд▓реЙрд╕ рд╕рдВрдкрд╛рджрд┐рдд рдХрд░реЗрдВ", callback_data="edit_stoploss_")],
        [InlineKeyboardButton("ЁЯСд Edit Name" if language == "en" else "ЁЯСд рдирд╛рдо рд╕рдВрдкрд╛рджрд┐рдд рдХрд░реЗрдВ", callback_data="edit_name_")],
        [InlineKeyboardButton("ЁЯУИ Edit Rate/Mode" if language == "en" else "ЁЯУИ рджрд░/рдореЛрдб рд╕рдВрдкрд╛рджрд┐рдд рдХрд░реЗрдВ", callback_data="edit_rate_mode_")],
        [InlineKeyboardButton("ЁЯТ░ Edit Currency" if language == "en" else "ЁЯТ░ рдореБрджреНрд░рд╛ рд╕рдВрдкрд╛рджрд┐рдд рдХрд░реЗрдВ", callback_data="edit_currency_")],
        [InlineKeyboardButton("ЁЯТ╝ Update Balance" if language == "en" else "ЁЯТ╝ рдмреИрд▓реЗрдВрд╕ рдЕрдкрдбреЗрдЯ рдХрд░реЗрдВ", callback_data="update_balance_")],
        [InlineKeyboardButton(f"тП░ {'Disable' if user_data.get('reminders', False) else 'Enable'} Reminders" if language == "en" else f"тП░ рд░рд┐рдорд╛рдЗрдВрдбрд░ {'рдмрдВрдж' if user_data.get('reminders', False) else 'рдЪрд╛рд▓реВ'} рдХрд░реЗрдВ", callback_data="toggle_reminders_")],
        [InlineKeyboardButton("ЁЯФД Reset All Data" if language == "en" else "ЁЯФД рд╕рднреА рдбреЗрдЯрд╛ рд░реАрд╕реЗрдЯ рдХрд░реЗрдВ", callback_data="reset_")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        settings_summary + "\n" + MESSAGES[language]["settings_prompt"],
        parse_mode="Markdown",
        reply_markup=reply_markup
    )
